version: 2.1

orbs:
  aws-eks: circleci/aws-eks@1.0.3
  helm: circleci/helm@1.2.0
  ansible-playbook: orbss/ansible-playbook@0.0.5
  rust: circleci/rust@1.5.0
  go: circleci/go@1.6.0

# Some of the workflows in this CI config are intended to be triggered over the CircleCI API
# The Circle v2 API allows API users to call a pipeline, and conditionally execute workflows.
# When editing this file, be careful to make sure workflows are run at the right time.

parameters:
  api_workflow_requested:
    type: string
    default: "none"
    description: run different workflows depending on whether triggered through api or git push
  namespace:
    type: string
    default: "error_this_namespace_definitely_does_not_exist"
  release:
    type: string
    default: "lotus-infra_circleci_default_release_changeme"
  chart:
    type: string
    default: "error_this_chart_is_required"
  chart_version:
    type: string
    default: "error_this_chart_version_is_required"
  helm_append:
    type: string
    default: ""
  override_repository:
    type: string
    default: ""
  override_tag:
    type: string
    default: ""

commands:
  install-helm:
    steps:
      - helm/install-helm-client:
          version: v3.5.0
      - run:
          command: |
            helm repo add filecoin https://filecoin-project.github.io/helm-charts
  setup-eks:
    parameters:
      cluster:
        type: string
        description: eks cluster
      region:
        type: string
        description: aws region
    steps:
      - aws-eks/install-aws-iam-authenticator
      - aws-eks/update-kubeconfig-with-authenticator:
          install-kubectl: true
          cluster-name: <<parameters.cluster>>
          aws-region: <<parameters.region>>
  git-clone:
    parameters:
      repo:
        type: string
        description: repo url
      where:
        type: string
        description: where to save
      branch:
        type: string
        default: "master"
        description: branch to checkout
    steps:
      - run:
          command: git clone --branch << parameters.branch >> << parameters.repo >> << parameters.where >>
  docker-login:
    steps:
      - run:
          command: echo $DOCKERHUB_PASSWORD | docker login --username $DOCKERHUB_USERNAME --password-stdin

jobs:
  # build and push lotus.
  lotus-build-containers:
    parameters:
      tag:
        type: string
        description: lotus tag to checkout
      repo:
        type: string
        description: docker repository
      network:
        type: string
        description: filecoin network
      use_gitsha:
        type: boolean
        default: false
        description: append gitsha to image tag (useful when tag is master)
    machine:
      image: ubuntu-2004:202010-01
    steps:
      - checkout
      - docker-login
      - git-clone:
          repo: https://github.com/filecoin-project/lotus
          where: $HOME/lotus
          branch: << parameters.tag >>
      - run:
          name: fake build containers
          command: sleep 10; echo fake build containers
      # - run:
      #     name: push docker << parameters.network >> << parameters.tag >> to << parameters.repo >>
      #     environment:
      #       USE_GITSHA: << parameters.use_gitsha >>
      #       DOCKER_TAG: << parameters.network >>-<< parameters.tag >>
      #     command: |
      #       echo "gitsha: $USE_GITSHA"
      #       if [ $USE_GITSHA -eq 1 ]
      #       then
      #         echo "gitsha was true"
      #         DOCKER_TAG=$DOCKER_TAG-$CIRCLE_SHA1
      #       fi
      #       scripts/build_containers.bash --src $HOME/lotus --network << parameters.network >> --tag << parameters.tag >> --docker-tag $DOCKER_TAG --repo << parameters.repo >>
      #       mkdir -p /tmp/circle
      #       echo -n $DOCKER_TAG > /tmp/circle/docker_tag
      #       echo -n << parameters.repo >> > /tmp/circle/docker_repo
      # - persist_to_workspace:
      #     root: /tmp/circle
      #     paths:
      #       - docker_tag
      #       - docker_repo

  lotus-sync-wait:
    parameters:
      cluster:
        type: string
        description: eks cluster name
      region:
        type: string
        description: aws region
      namespace:
        type: string
        description: kubernetes namespace
      pod:
        type: string
        description: kubernetes namespace
    executor: aws-eks/python3
    steps:
      - setup-eks:
          cluster: << parameters.cluster >>
          region: << parameters.region >>
      - run:
          name: Wait until lotus is synced
          command: |
            kubectl -n << parameters.namespace >> wait --for=condition=ready pod << parameters.pod >>
            sleep 10
            kubectl -n << parameters.namespace >> exec << parameters.pod >> -- lotus sync wait


  # This will deploy a helm chart with values stored in this repo.
  # Each release will have two helm values files -- "base.yaml" and <release_name>.yaml
  # and they must be installed in the right directory in this repo.
  helm-deploy:
    parameters:
      cluster:
        type: string
        description: eks cluster name
      region:
        type: string
        description: aws region
      namespace:
        type: string
        description: kubernetes namespace
      release:
        type: string
        description: helm release
      chart:
        type: string
        description: helm chart
      chart_version:
        type: string
        description: helm chart version
      helm_append:
        type: string
        default: ""
        description: Anything more you want to add to the helm commandline
      override_repository:
        type: string
        default: ""
        description: override image.repository in helm chart
      override_tag:
        type: string
        default: ""
        description: override image.tag in helm chart
      override_from_workspace:
        type: boolean
        default: false
        description: override image.repository and image.tag using the workspace.
    executor: aws-eks/python3
    steps:
      - checkout
      - setup-eks:
          cluster: << parameters.cluster >>
          region: << parameters.region >>
      - install-helm
      - attach_workspace:
          at: /tmp/circle
      - run:
          name: fake helm deploy
          command: echo fake helm deploy
      # - run:
      #     name: deploy << parameters.chart >>/<< parameters.release >> to << parameters.cluster >>/<< parameters.namespace >>
      #     environment:
      #       OVERRIDE_FROM_WORKSPACE: << parameters.override_from_workspace >>
      #       DOCKER_TAG: << parameters.override_tag >>
      #       DOCKER_REPO: << parameters.override_repository >>
      #       HELM_APPEND: << parameters.helm_append >>
      #     command: |
      #       if [ $OVERRIDE_FROM_WORKSPACE -eq 1 ]
      #       then
      #         DOCKER_REPO=$(cat /tmp/circle/docker_repo)
      #         DOCKER_TAG=$(cat /tmp/circle/docker_tag)
      #       fi
      #       if [ ! -z "$DOCKER_TAG" ]; then HELM_APPEND=" --set image.tag=${DOCKER_TAG} ${HELM_APPEND}"; fi
      #       if [ ! -z "$DOCKER_REPO" ]; then HELM_APPEND=" --set image.repository=${DOCKER_REPO} ${HELM_APPEND}"; fi
      #       echo "all helm overrides being applied:"
      #       echo $HELM_APPEND
      #       helm --namespace << parameters.namespace >> upgrade --install << parameters.release >> << parameters.chart >> --version << parameters.chart_version >> --values kubernetes/<< parameters.cluster >>/helm/<< parameters.namespace >>/<< parameters.chart >>/base.yaml --values kubernetes/<< parameters.cluster >>/helm/<< parameters.namespace >>/<< parameters.chart >>/<< parameters.release >>.yaml $HELM_APPEND

  ansible-deploy:
    parameters:
      install_network:
        type: string
      deploy_network:
        type: string
      preseal:
        type: boolean
        default: true
      create_cert:
        type: boolean
        default: true
      build_flags:
        type: string
        default: "-f"
      reset:
        type: boolean
        default: true
      delay:
        type: string
        default: "600"
      branch:
        type: string
        default: "master"
    machine:
      image: ubuntu-2004:202010-01
    steps:
      - checkout
      - aws-eks/install-aws-iam-authenticator
      - rust/install
      - go/install:
          version: 1.15.5
      - ansible-playbook/install
      - git-clone:
          repo: https://github.com/filecoin-project/lotus
          where: $HOME/lotus
          branch: << parameters.branch >>
      - run:
          name: install lotus software
          command: |
            sudo apt-get update
            sudo apt-get install libhwloc-dev ocl-icd-opencl-dev
            cd $HOME/lotus
            GOFLAGS+=-tags=<< parameters.install_network >> make lotus-shed lotus-seed
            sudo install -o root -g root -m 0755 ./lotus-seed ./lotus-shed /usr/local/bin
      - run:
          name: setup secrets
          command: |
            cd ansible
            echo $ANSIBLE_VAULT_PASSWORD > .vault_password
            # echo $SSH_PRIVATE_KEY_BASE64 | base64 -d > ~/.ssh/id_rsa
            # chmod 600 ~/.ssh/id_rsa
            # rm ~/.ssh/id_rsa.pub
      - run:
          name: ansible deploy << parameters.deploy_network >>
          command: |
            args=(
              "-n" "<< parameters.deploy_network >>"
              "-s" "$HOME/lotus"
              "-b" "<< parameters.build_flags >>"
              "-d" "<< parameters.delay >>"
            )
            test << parameters.reset >> == "true" && args+=("-r")
            test << parameters.preseal >> == "true" && args+=("-p")
            test << parameters.create_cert >> == "true" && args+=("-c")
            cd ansible
            ./setup_fildev_network.bash "${args[@]}"

workflows:
  butterfly-nightly:
    when:
      equal: [ "none", << pipeline.parameters.api_workflow_requested >> ]
    triggers:
      - schedule:
          cron: "0 0 * * *"
          filters:
            branches:
              only:
                - /^(main|master)$/
    jobs:
      - lotus-build-containers:
          tag: master
          repo: coryschwartz
          network: butterflynet
          use_gitsha: true
      - helm-deploy:
          context: sentinel-staging-deploy
          requires:
            - lotus-build-containers
          cluster: mainnet-us-east-2-dev-eks
          region: us-east-2
          namespace: ntwk-butterfly-fullnode
          chart: filecoin/lotus-fullnode
          chart_version: 0.3.1
          override_from_workspace: true
          matrix:
            parameters:
              release:
                - fullnode-0
                - fullnode-1
                - fullnode-2

  api-helm-deploy:
    when:
      equal: [ "helm-deploy", << pipeline.parameters.api_workflow_requested >> ]
    jobs:
      - helm-deploy:
          context: sentinel-staging-deploy
          cluster: mainnet-us-east-2-dev-eks
          region: us-east-2
          namespace: << pipeline.parameters.namespace >>
          chart: << pipeline.parameters.chart >>
          chart_version: << pipeline.parameters.chart_version >>
          override_repository: << pipeline.parameters.override_repository >>
          override_tag: << pipeline.parameters.override_tag >>
          release: << pipeline.parameters.release >>
          helm_append: << pipeline.parameters.helm_append >>

  api-lotus-rollout:
    when:
      equal: [ "lotus-rollout", << pipeline.parameters.api_workflow_requested >> ]
    jobs:
      # butterflynet ansible
      - ansible-deploy:
          name: ansible-deploy-butterflynet
          deploy_network: butterfly.fildev.network
          install_network: butterflynet
          preseal: false
          create_cert: false
          build_flags: "-f"
          reset: false
          delay: "600"
          branch: << pipeline.parameters.override_tag >>
      - lotus-build-containers:
          name: build-containers-calibrationnet
          tag: << pipeline.parameters.override_tag >>
          repo: << pipeline.parameters.override_repository >>
          use_gitsha: false
          network: calibnet
      # calibrationnet on kubernetes
      - helm-deploy:
          name: helm-deploy-calibrationnet
          context: sentinel-staging-deploy
          cluster: mainnet-us-east-2-dev-eks
          region: us-east-2
          namespace: ntwk-calibrationnet-fullnode
          chart: filecoin/lotus-fullnode
          chart_version: 0.3.1
          override_repository: << pipeline.parameters.override_repository >>
          override_tag: << pipeline.parameters.override_tag >>
          helm_append: << pipeline.parameters.helm_append >>
          matrix:
            parameters:
              release:
                - fullnode-0
                - fullnode-1
                - fullnode-2
          requires:
           - build-containers-calibrationnet
      # calibrationnet ansible
      # - ansible-deploy:
      #     name: ansible-deploy-calibrationnet
      #     network: calibration
      #     preseal: false
      #     create_cert: false
      #     build_flags: "-f"
      #     reset: false
      #     delay: "true"
      # mainnet
      - lotus-build-containers:
          name: build-containers-mainnet
          tag: << pipeline.parameters.override_tag >>
          repo: << pipeline.parameters.override_repository >>
          use_gitsha: false
          network: mainnet
      # Manual approvals for mainnet
      - start-bootstrap-mainnet-us-east-1-eks:
          type: approval
          requires:
           - build-containers-mainnet
      - start-bootstrap-mainnet-eu-central-1-eks:
          type: approval
          requires:
           - build-containers-mainnet
      - start-bootstrap-mainnet-ap-southeast-1-eks:
          type: approval
          requires:
           - build-containers-mainnet
      - start-fullnode-mainnet-us-east-1-eks:
          type: approval
          requires:
           - build-containers-mainnet

      # deploy bootstrappers one DC at a time
      # us-east-1 bootstrappers 0-2
      - helm-deploy:
          name: helm-deploy-bootstrap-0
          context: filecoin-mainnet-aws
          cluster: mainnet-us-east-1-eks
          region: us-east-1
          namespace: ntwk-mainnet-bootstrap
          chart: filecoin/lotus-fullnode
          chart_version: 0.3.1
          override_repository: << pipeline.parameters.override_repository >>
          override_tag: << pipeline.parameters.override_tag >>
          helm_append: << pipeline.parameters.helm_append >>
          release: bootstrap-0
          requires:
           - start-bootstrap-mainnet-us-east-1-eks
      - lotus-sync-wait:
          name: lotus-sync-wait-bootstrap-0
          context: filecoin-mainnet-aws
          cluster: mainnet-us-east-1-eks
          region: us-east-1
          namespace: ntwk-mainnet-bootstrap
          pod: bootstrap-0-lotus-0
          requires:
           - helm-deploy-bootstrap-0
      - helm-deploy:
          name: helm-deploy-bootstrap-1
          context: filecoin-mainnet-aws
          cluster: mainnet-us-east-1-eks
          region: us-east-1
          namespace: ntwk-mainnet-bootstrap
          chart: filecoin/lotus-fullnode
          chart_version: 0.3.1
          override_repository: << pipeline.parameters.override_repository >>
          override_tag: << pipeline.parameters.override_tag >>
          helm_append: << pipeline.parameters.helm_append >>
          release: bootstrap-1
          requires:
           - lotus-sync-wait-bootstrap-0
      - lotus-sync-wait:
          name: lotus-sync-wait-bootstrap-1
          context: filecoin-mainnet-aws
          cluster: mainnet-us-east-1-eks
          region: us-east-1
          namespace: ntwk-mainnet-bootstrap
          pod: bootstrap-1-lotus-0
          requires:
           - helm-deploy-bootstrap-1
      - helm-deploy:
          name: helm-deploy-bootstrap-2
          context: filecoin-mainnet-aws
          cluster: mainnet-us-east-1-eks
          region: us-east-1
          namespace: ntwk-mainnet-bootstrap
          chart: filecoin/lotus-fullnode
          chart_version: 0.3.1
          override_repository: << pipeline.parameters.override_repository >>
          override_tag: << pipeline.parameters.override_tag >>
          helm_append: << pipeline.parameters.helm_append >>
          release: bootstrap-2
          requires:
           - lotus-sync-wait-bootstrap-1
      - lotus-sync-wait:
          name: lotus-sync-wait-bootstrap-2
          context: filecoin-mainnet-aws
          cluster: mainnet-us-east-1-eks
          region: us-east-1
          namespace: ntwk-mainnet-bootstrap
          pod: bootstrap-2-lotus-0
          requires:
           - helm-deploy-bootstrap-2

      # eu-central-1 bootstrappers 3-5
      - helm-deploy:
          name: helm-deploy-bootstrap-3
          context: filecoin-mainnet-aws
          cluster: mainnet-us-east-1-eks
          region: us-east-1
          namespace: ntwk-mainnet-bootstrap
          chart: filecoin/lotus-fullnode
          chart_version: 0.3.1
          override_repository: << pipeline.parameters.override_repository >>
          override_tag: << pipeline.parameters.override_tag >>
          helm_append: << pipeline.parameters.helm_append >>
          release: bootstrap-3
          requires:
           - start-bootstrap-mainnet-eu-central-1-eks
      - lotus-sync-wait:
          name: lotus-sync-wait-bootstrap-3
          context: filecoin-mainnet-aws
          cluster: mainnet-us-east-1-eks
          region: us-east-1
          namespace: ntwk-mainnet-bootstrap
          pod: bootstrap-3-lotus-0
          requires:
           - helm-deploy-bootstrap-3
      - helm-deploy:
          name: helm-deploy-bootstrap-4
          context: filecoin-mainnet-aws
          cluster: mainnet-us-east-1-eks
          region: us-east-1
          namespace: ntwk-mainnet-bootstrap
          chart: filecoin/lotus-fullnode
          chart_version: 0.3.1
          override_repository: << pipeline.parameters.override_repository >>
          override_tag: << pipeline.parameters.override_tag >>
          helm_append: << pipeline.parameters.helm_append >>
          release: bootstrap-4
          requires:
           - lotus-sync-wait-bootstrap-3
      - lotus-sync-wait:
          name: lotus-sync-wait-bootstrap-4
          context: filecoin-mainnet-aws
          cluster: mainnet-us-east-1-eks
          region: us-east-1
          namespace: ntwk-mainnet-bootstrap
          pod: bootstrap-4-lotus-0
          requires:
           - helm-deploy-bootstrap-4
      - helm-deploy:
          name: helm-deploy-bootstrap-5
          context: filecoin-mainnet-aws
          cluster: mainnet-us-east-1-eks
          region: us-east-1
          namespace: ntwk-mainnet-bootstrap
          chart: filecoin/lotus-fullnode
          chart_version: 0.3.1
          override_repository: << pipeline.parameters.override_repository >>
          override_tag: << pipeline.parameters.override_tag >>
          helm_append: << pipeline.parameters.helm_append >>
          release: bootstrap-5
          requires:
           - lotus-sync-wait-bootstrap-4
      - lotus-sync-wait:
          name: lotus-sync-wait-bootstrap-5
          context: filecoin-mainnet-aws
          cluster: mainnet-us-east-1-eks
          region: us-east-1
          namespace: ntwk-mainnet-bootstrap
          pod: bootstrap-5-lotus-0
          requires:
           - helm-deploy-bootstrap-5

      # ap-southeast-1 bootstrappers 6-8
      - helm-deploy:
          name: helm-deploy-bootstrap-6
          context: filecoin-mainnet-aws
          cluster: mainnet-us-east-1-eks
          region: us-east-1
          namespace: ntwk-mainnet-bootstrap
          chart: filecoin/lotus-fullnode
          chart_version: 0.3.1
          override_repository: << pipeline.parameters.override_repository >>
          override_tag: << pipeline.parameters.override_tag >>
          helm_append: << pipeline.parameters.helm_append >>
          release: bootstrap-6
          requires:
           - start-bootstrap-mainnet-ap-southeast-1-eks
      - lotus-sync-wait:
          name: lotus-sync-wait-bootstrap-6
          context: filecoin-mainnet-aws
          cluster: mainnet-us-east-1-eks
          region: us-east-1
          namespace: ntwk-mainnet-bootstrap
          pod: bootstrap-6-lotus-0
          requires:
           - helm-deploy-bootstrap-6
      - helm-deploy:
          name: helm-deploy-bootstrap-7
          context: filecoin-mainnet-aws
          cluster: mainnet-us-east-1-eks
          region: us-east-1
          namespace: ntwk-mainnet-bootstrap
          chart: filecoin/lotus-fullnode
          chart_version: 0.3.1
          override_repository: << pipeline.parameters.override_repository >>
          override_tag: << pipeline.parameters.override_tag >>
          helm_append: << pipeline.parameters.helm_append >>
          release: bootstrap-7
          requires:
           - lotus-sync-wait-bootstrap-6
      - lotus-sync-wait:
          name: lotus-sync-wait-bootstrap-7
          context: filecoin-mainnet-aws
          cluster: mainnet-us-east-1-eks
          region: us-east-1
          namespace: ntwk-mainnet-bootstrap
          pod: bootstrap-7-lotus-0
          requires:
           - helm-deploy-bootstrap-7
      - helm-deploy:
          name: helm-deploy-bootstrap-8
          context: filecoin-mainnet-aws
          cluster: mainnet-us-east-1-eks
          region: us-east-1
          namespace: ntwk-mainnet-bootstrap
          chart: filecoin/lotus-fullnode
          chart_version: 0.3.1
          override_repository: << pipeline.parameters.override_repository >>
          override_tag: << pipeline.parameters.override_tag >>
          helm_append: << pipeline.parameters.helm_append >>
          release: bootstrap-8
          requires:
           - lotus-sync-wait-bootstrap-7
      - lotus-sync-wait:
          name: lotus-sync-wait-bootstrap-8
          context: filecoin-mainnet-aws
          cluster: mainnet-us-east-1-eks
          region: us-east-1
          namespace: ntwk-mainnet-bootstrap
          pod: bootstrap-8-lotus-0
          requires:
           - helm-deploy-bootstrap-8

      # fullnodes, one at a time.
      - helm-deploy:
          name: helm-deploy-fullnode-0
          context: filecoin-mainnet-aws
          cluster: mainnet-us-east-1-eks
          region: us-east-1
          namespace: ntwk-mainnet-fullnode
          chart: filecoin/lotus-fullnode
          chart_version: 0.3.1
          override_repository: << pipeline.parameters.override_repository >>
          override_tag: << pipeline.parameters.override_tag >>
          helm_append: << pipeline.parameters.helm_append >>
          release: fullnode-0
          requires:
           - start-fullnode-mainnet-us-east-1-eks
      - start-fullnode-1:
          type: approval
          requires:
           - helm-deploy-fullnode-0
      - helm-deploy:
          name: helm-deploy-fullnode-1
          context: filecoin-mainnet-aws
          cluster: mainnet-us-east-1-eks
          region: us-east-1
          namespace: ntwk-mainnet-fullnode
          chart: filecoin/lotus-fullnode
          chart_version: 0.3.1
          override_repository: << pipeline.parameters.override_repository >>
          override_tag: << pipeline.parameters.override_tag >>
          helm_append: << pipeline.parameters.helm_append >>
          release: fullnode-1
          requires:
           - start-fullnode-1
      - start-fullnode-2:
          type: approval
          requires:
           - helm-deploy-fullnode-1
      - helm-deploy:
          name: helm-deploy-fullnode-2
          context: filecoin-mainnet-aws
          cluster: mainnet-us-east-1-eks
          region: us-east-1
          namespace: ntwk-mainnet-fullnode
          chart: filecoin/lotus-fullnode
          chart_version: 0.3.1
          override_repository: << pipeline.parameters.override_repository >>
          override_tag: << pipeline.parameters.override_tag >>
          helm_append: << pipeline.parameters.helm_append >>
          release: fullnode-2
          requires:
           - start-fullnode-2
      - start-fullnode-3:
          type: approval
          requires:
           - helm-deploy-fullnode-2
      - helm-deploy:
          name: helm-deploy-fullnode-3
          context: filecoin-mainnet-aws
          cluster: mainnet-us-east-1-eks
          region: us-east-1
          namespace: ntwk-mainnet-fullnode
          chart: filecoin/lotus-fullnode
          chart_version: 0.3.1
          override_repository: << pipeline.parameters.override_repository >>
          override_tag: << pipeline.parameters.override_tag >>
          helm_append: << pipeline.parameters.helm_append >>
          release: fullnode-3
          requires:
           - start-fullnode-3
      - start-fullnode-4:
          type: approval
          requires:
           - helm-deploy-fullnode-3
      - helm-deploy:
          name: helm-deploy-fullnode-4
          context: filecoin-mainnet-aws
          cluster: mainnet-us-east-1-eks
          region: us-east-1
          namespace: ntwk-mainnet-fullnode
          chart: filecoin/lotus-fullnode
          chart_version: 0.3.1
          override_repository: << pipeline.parameters.override_repository >>
          override_tag: << pipeline.parameters.override_tag >>
          helm_append: << pipeline.parameters.helm_append >>
          release: fullnode-4
          requires:
           - start-fullnode-4
      - start-fullnode-5:
          type: approval
          requires:
           - helm-deploy-fullnode-4
      - helm-deploy:
          name: helm-deploy-fullnode-5
          context: filecoin-mainnet-aws
          cluster: mainnet-us-east-1-eks
          region: us-east-1
          namespace: ntwk-mainnet-fullnode
          chart: filecoin/lotus-fullnode
          chart_version: 0.3.1
          override_repository: << pipeline.parameters.override_repository >>
          override_tag: << pipeline.parameters.override_tag >>
          helm_append: << pipeline.parameters.helm_append >>
          release: fullnode-5
          requires:
           - start-fullnode-5
      - start-fullnode-6:
          type: approval
          requires:
           - helm-deploy-fullnode-5
      - helm-deploy:
          name: helm-deploy-fullnode-6
          context: filecoin-mainnet-aws
          cluster: mainnet-us-east-1-eks
          region: us-east-1
          namespace: ntwk-mainnet-fullnode
          chart: filecoin/lotus-fullnode
          chart_version: 0.3.1
          override_repository: << pipeline.parameters.override_repository >>
          override_tag: << pipeline.parameters.override_tag >>
          helm_append: << pipeline.parameters.helm_append >>
          release: fullnode-6
          requires:
           - start-fullnode-6
      - start-fullnode-7:
          type: approval
          requires:
           - helm-deploy-fullnode-6
      - helm-deploy:
          name: helm-deploy-fullnode-7
          context: filecoin-mainnet-aws
          cluster: mainnet-us-east-1-eks
          region: us-east-1
          namespace: ntwk-mainnet-fullnode
          chart: filecoin/lotus-fullnode
          chart_version: 0.3.1
          override_repository: << pipeline.parameters.override_repository >>
          override_tag: << pipeline.parameters.override_tag >>
          helm_append: << pipeline.parameters.helm_append >>
          release: fullnode-7
          requires:
           - start-fullnode-7
